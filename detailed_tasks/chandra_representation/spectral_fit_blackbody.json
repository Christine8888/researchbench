{
    "task_id": "spectral_fit_blackbody",
    "paper_id": "chandra_representation",
    "kind": "numeric",
    "difficulty": 5,
    "description": "Fit the spectrum of the transient XRT 200515 with a blackbody model",
    "instructions": [
        "1. Load the spectral files: acisf23022_000N027_r0122_arf3.fits.gz (auxiliary response file), acisf23022_000N027_r0122_pha3.fits.gz (pulse height analyzer spectrum), and acisf23022_000N027_r0122_rmf3.fits.gz (redistribution matrix file).",
        "2. Initialize the Sherpa analysis environment and configure the cosmic abundance and cross-section models as specified in \\ref{sec:specana}: ui.set_xsabund('wilm'), ui.set_xsxsect('vern'), ui.set_xscosmo(h0=70, q0=0, l0=0.73).",
        "3. Set the systematic error to zero using ui.set_syserror(0) to ensure only statistical uncertainties are considered in the fitting process.",
        "4. Load the spectral data files into Sherpa using ui.load_pha() for the spectrum file, and ensure the ARF and RMF files are automatically associated or manually loaded using ui.load_arf() and ui.load_rmf().",
        "5. Filter the energy range to match Chandra's ACIS sensitivity range of 0.3-7.0 keV using ui.notice(0.3, 7.0) to exclude energies where the telescope response is poor.",
        "6. Define the spectral model as an absorbed thermal blackbody: ui.set_model(ui.xstbabs.abs1 * ui.xsbbody.bb1), where xstbabs represents photoelectric absorption and xsbbody represents the blackbody emission component.",
        "7. Set initial parameter values for the model components: (a) Absorption column density $N_H$ to a reasonable initial value around $0.5 \\times 10^{22}$ cm$^{-2}$, (b) Blackbody temperature $kT$ to an initial value around 1.5 keV, (c) Blackbody normalization to an appropriate initial value based on the observed flux level.",
        "8. Set parameter bounds to ensure physical values: (a) $N_H \\geq 0$, (b) $kT > 0$ with reasonable upper limit around 10 keV, (c) Normalization $> 0$.",
        "9. Perform the spectral fitting using ui.fit() with Cash statistics (appropriate for low-count spectra) by setting ui.set_stat('cash') before fitting.",
        "10. Check the fit convergence and quality by examining the fit statistics using ui.get_fit_results() and ensure the fit has converged successfully.",
        "11. Extract the best-fit blackbody temperature parameter using ui.get_par('bb1.kT').val, which returns the temperature $kT$ in units of keV.",
        "12. Verify the parameter uncertainty is reasonable by checking ui.get_par('bb1.kT').min and ui.get_par('bb1.kT').max values.",
        "13. Return the best-fit blackbody temperature $kT$ in keV as the final result."
    ],
    "tolerance": 0.2,
    "expected_output": 1.81
}