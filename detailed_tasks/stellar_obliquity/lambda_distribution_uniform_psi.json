{
    "task_id": "lambda_distribution_uniform_psi",
    "kind": "numeric",
    "paper_id": "stellar_obliquity",
    "difficulty": 2,
    "description": "Calculate the sky-projected stellar obliquity distribution for isotropic stellar obliquity",
    "instructions": [
        "1. Set up the calculation for sky-projected stellar obliquity ($\\lambda$) distribution when stellar obliquity ($\\psi$) is isotropically distributed.",
        "2. Use the condition that for isotropic stellar obliquity: cos $\\psi$ ~ U(-1,1), meaning cos $\\psi$ is uniformly distributed between -1 and 1.",
        "3. Set the orbital inclination $i_{\\text{orb}} = 90\u00b0$ as specified for transiting systems.",
        "4. Apply the relationship from \\ref{subsec:jacobian} for the probability density function: $p(\\cos \\lambda) = \\frac{1}{\\pi \\sqrt{1-\\cos^2 \\lambda}}$.",
        "5. Transform from the cos $\\lambda$ space to the $\\lambda$ space using the Jacobian transformation.",
        "6. For the transformation from $p(\\cos \\lambda)$ to $p(\\lambda)$, use: $p(\\lambda) = p(\\cos \\lambda) \\left|\\frac{d\\cos \\lambda}{d\\lambda}\\right| = p(\\cos \\lambda) \\sin \\lambda$.",
        "7. Substitute the expression: $p(\\lambda) = \\frac{1}{\\pi \\sqrt{1-\\cos^2 \\lambda}} \\sin \\lambda = \\frac{\\sin \\lambda}{\\pi \\sqrt{1-\\cos^2 \\lambda}}$.",
        "8. Simplify using the trigonometric identity $\\sin \\lambda = \\sqrt{1-\\cos^2 \\lambda}$: $p(\\lambda) = \\frac{\\sqrt{1-\\cos^2 \\lambda}}{\\pi \\sqrt{1-\\cos^2 \\lambda}} = \\frac{1}{\\pi}$.",
        "9. Verify that this gives a uniform distribution for $\\lambda$ over the interval [0, $\\pi$], which matches the expected result from \\ref{subsec:jacobian}.",
        "10. Calculate the probability density at $\\lambda = 45\u00b0 = \\pi/4$ radians using the derived formula.",
        "11. Substitute $\\lambda = \\pi/4$ into $p(\\lambda) = \\frac{1}{\\pi}$.",
        "12. Compute the numerical value: $p(\\lambda = \\pi/4) = \\frac{1}{\\pi} \\approx 0.3183$.",
        "13. Round the probability density value to 4 decimal places using numpy.round(probability_density, 4).",
        "14. Verify that the computation completes in less than 1 second on a standard laptop.",
        "15. Return the probability density value at $\\lambda = 45\u00b0$ rounded to 4 decimal places as the final result."
    ],
    "expected_output": 0.3183,
    "tolerance": 0.001,
    "parents": [],
    "output_justification": "For a uniformly distributed cos \u03c8, the paper states that \u03bb is uniformly distributed between 0 and \u03c0. Thus p(\u03bb) = 1/\u03c0. Since we want the probability density at \u03bb = \u03c0/4, the answer is 1/\u03c0 \u2248 0.3183."
}