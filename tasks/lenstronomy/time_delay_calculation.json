{
    "task_id": "time_delay_calculation",
    "kind": "numeric",
    "difficulty": 4,
    "description": "Calculate the time delays between multiple images of a lensed point source using a power-law elliptical mass distribution (EPL) lens model.",
    "instructions": "1. Define the lens model: Use a power-law elliptical mass distribution ('EPL' model in lenstronomy) centered at (0,0). Set Einstein radius theta_E = 1.2 arcsec, power-law slope gamma = 2.0 (isothermal). Calculate ellipticity components e1=0.0556, e2=0.0962 from axis ratio q = 0.8 and position angle phi = 30 degrees.\n2. Define the source position: Place a point source at (x_s, y_s) = (0.1, 0.1) arcsec.\n3. Initialize the lens model: Create an instance of `lenstronomy.LensModel.lens_model.LensModel` with the specified EPL parameters.\n4. Find image positions: Use the `lenstronomy.LensModel.Solver.lens_equation_solver.LensEquationSolver` class to find the positions (x_i, y_i) of all lensed images for the given source position.\n5. Define cosmology: Use a flat LambdaCDM cosmology with H0 = 70 km/s/Mpc, Omega_m = 0.3, Omega_Lambda = 0.7. Set lens redshift z_lens = 0.5 and source redshift z_source = 2.0. Use `astropy.cosmology` to calculate the time-delay distance D_dt.\n6. Calculate Fermat potentials: Use the `fermat_potential` method of the `LensModel` instance to compute the Fermat potential for each image position found in step 4.\n7. Calculate time delays: Compute the relative time delays using the formula: delta_t = (1 + z_lens) * D_dt / c * (fermat_potential_i - fermat_potential_min), where c is the speed of light and fermat_potential_min is the minimum Fermat potential among the images (corresponding to the first arriving image).\n8. Identify the first and last arriving images based on their Fermat potentials (minimum and maximum, respectively).\n9. Report the time delay in days between the first arriving image and the last arriving image.",
    "expected_output": 11.52,
    "tolerance": 0.1,
    "parents": [],
    "paper_id": "lenstronomy"
}