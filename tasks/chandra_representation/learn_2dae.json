{
    "task_id": "learn_2dae",
    "paper_id": "chandra_representation",
    "kind": "code",
    "difficulty": 6,
    "description": "Reproduce the 2D-AE embedding space",
    "instructions": "Given the ‘eventfiles_table.csv’ file from https://huggingface.co/datasets/StevenDillmann/chandra_xray_eventfiles, reproduce the 2D-AE embedding space from the paper: 1) Build the E-t maps (2D eventfile representations) as detailed in the paper (normalize the histogram values here). 2) Apply the trained encoder rom the Github repo https://github.com/StevenDillmann/ml-xraytransients-mnras/blob/main/encoders/encoder_et.h5  (feature extraction). 3) Apply tsne with given hyperparameters in the paper (dimensionality reduction). 4) Store the resulting embedding vectors under ../data/chandra_representation_embeddings/{llm_name}2DAE_embedding.csv with the columns tsne1, tsne2, obsreg_id, where ‘llm_name’ is the name of the LLM used. 5) Load the original embedding space ../data/chandra_representation_embeddings/paper2DAE_embedding.csv with the columns tsne1, tsne2, obsreg_id and compute the similarity (procrustes_disparity) between the tsne embedding vectors you produced vs the original embedding vectors by performing Procrustes analysis. Update the ../data/chandra_representation_embeddings/results2DAE.csv file by introducing a new row entry with the columns llm_name and procrustes_disparity. This serves a ranking of how well the LLM can reproduce the original embedding vectors (the lower the score the more similar).",
    "tolerance": "",
    "expected_output": "{llm_name}2DAE_embedding.csv"
}
